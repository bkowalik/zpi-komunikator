; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "CodeTalk server"
#define MyAppVersion "1.0"
#define MyAppExeName "run.cmd"
#define Extras "D:\Projects\zpi\install\server\extras"
#define SBTPackage "D:\Projects\zpi\install\server\zpi-server-0.1"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D33A40B2-0AA2-448B-900F-B27D0E1797D6}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "{#SBTPackage}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#Extras}\*"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: FileReplaceString('{app}\bin\zpi-server.bat', 'APP_LIB_DIR=%ZPI_SERVER_HOME%\lib\', 'APP_LIB_DIR=..\lib');
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\server.ico"
Name: "{group}\Start background"; Filename: "{app}\start.exe"; IconFilename: "{app}\server.ico"
Name: "{group}\Stop background"; Filename: "{app}\stop.exe"; IconFilename: "{app}\server.ico"

[UninstallDelete]
Type: filesandordirs; Name: "{app}\bin"
Type: filesandordirs; Name: "{app}"

[Code]
procedure FileReplaceString(const FileName, SearchString, ReplaceString: String);
var
  MyFile : TStrings;
  MyText : string;
  Fname: string;
begin
  MyFile := TStringList.Create;

  try
  MyFile.LoadFromFile(ExpandConstant(FileName));
  MyText := MyFile.Text;

  if StringChangeEx(MyText, SearchString, ReplaceString, True) > 0 then //Only save if text has been changed.
  begin;
    MyFile.Text := MyText;
    MyFile.SaveToFile(ExpandConstant(FileName));
  end;
  finally
    MyFile.Free;
  end;
end;